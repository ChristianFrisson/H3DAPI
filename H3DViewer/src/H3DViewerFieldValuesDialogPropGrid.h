#ifndef __H3DViewerFieldValuesDialogPropGrid__
#define __H3DViewerFieldValuesDialogPropGrid__

/**
@file
Subclass of FieldValuesDialog, which is generated by wxFormBuilder.
*/

#include <wx/version.h>
#if( wxMAJOR_VERSION > 2 || wxMINOR_VERSION >= 9 ) 
#define HAVE_WXPROPGRID
#endif


#ifdef HAVE_WXPROPGRID

#define DEFAULT_VALUES
#include "H3DViewer.h"

#include <H3D/Node.h>
#include <H3DUtil/AutoPtrVector.h>

#include "wx/wx.h"
#include "wx/propgrid/propgrid.h"
#include "wx/propgrid/advprops.h"

///////////////////////////////////////////////////////////////////////////////
/// Class FieldValuesDialog
///////////////////////////////////////////////////////////////////////////////

class H3DViewerFieldValuesPanelPropGrid : public wxPanel {
public:
  wxPropertyGrid* FieldValuesGrid;
  H3DViewerFieldValuesPanelPropGrid( wxWindow* parent, 
                                      wxWindowID id = wxID_ANY, 
                                      const wxPoint& pos = wxDefaultPosition, 
                                      const wxSize& size = wxSize( 236,335 ), 
                                      long style = wxTAB_TRAVERSAL );
  ~H3DViewerFieldValuesPanelPropGrid();
	
  void OnIdle( wxIdleEvent& event );
  virtual void OnPropertyChanged( wxPropertyGridEvent& event );
  
  void displayFieldsFromNode( H3D::Node * );

  // Get the node which values are currently being shown.
  inline H3D::Node *getDisplayedNode() {
    return displayed_node.get();
  }

  static void populateGridFromNode( wxPropertyGrid *FieldValuesGrid,
				    H3D::Node *n,
				    H3DUtil::AutoPtrVector< H3D::Field > &property_update_fields );
 protected:

  class PropertyUpdater: public H3D::Field {
  public:
  PropertyUpdater( wxPGProperty *p ): 
    property(p) {}
    
  protected:    
    virtual void update();
    wxPGProperty *property;
  };
  
  static wxPGProperty *getPropertyFromField( H3D::Field *f,
                                             const string &field_name = "" );
  
  H3DUtil::AutoPtrVector< H3D::Field  > property_update_fields;
  
  H3D::TimeStamp last_fields_update;
#ifdef DEFAULT_VALUES
  auto_ptr< H3D::Node > default_values_node;
#endif
  H3DUtil::AutoRef< H3D::Node > displayed_node;
  
};


class H3DViewerFieldValuesDialogPropGrid : public wxFrame {
public:
  wxPropertyGrid* FieldValuesGrid;
  H3DViewerFieldValuesDialogPropGrid( wxWindow* parent, 
                                      wxWindowID id = wxID_ANY, 
                                      const wxString& title = wxEmptyString, 
                                      const wxPoint& pos = wxDefaultPosition, 
                                      const wxSize& size = wxSize( 236,335 ), 
                                      long style = wxDEFAULT_FRAME_STYLE|wxTAB_TRAVERSAL );
  ~H3DViewerFieldValuesDialogPropGrid();

  void displayFieldsFromNode( H3D::Node * );

  H3DViewerFieldValuesPanelPropGrid *prop_grid_panel;
};


#endif // HAVE_WXPROPGRID
#endif // __H3DViewerFieldValuesDialog__
