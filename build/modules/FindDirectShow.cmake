# - Find DirectShow, windows only
#
#  DIRECTSHOW_INCLUDE_DIR -  where to find streams.h.
#  DIRECTSHOW_LIBRARIES    - List of libraries when using DirectShow.
#  DIRECTSHOW_FOUND        - True if DirectShow is found.

# Macro to check if MFC exists. Would like to check if ATL exists but this will have to do for now.
# Can be seen as a way of detecting whether an express version of visual studio is used or not.
MACRO(TEST_FOR_EXPRESS)
  SET(CMAKE_BUILD_ON_VISUAL_STUDIO 0)
  IF(WIN32 AND NOT UNIX AND NOT BORLAND AND NOT MINGW )
    SET(CMAKE_BUILD_ON_VISUAL_STUDIO 1)
  ENDIF(WIN32 AND NOT UNIX AND NOT BORLAND AND NOT MINGW )
  
  IF(CMAKE_BUILD_ON_VISUAL_STUDIO)
    IF("CMake_HAVE_MFC" MATCHES "^CMake_HAVE_MFC$")
      SET(CHECK_INCLUDE_FILE_VAR "afxwin.h")
      CONFIGURE_FILE(${CMAKE_ROOT}/Modules/CheckIncludeFile.cxx.in
        ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/CheckIncludeFile.cxx)
      MESSAGE(STATUS "Looking for MFC")
      TRY_COMPILE(CMake_HAVE_MFC
        ${CMAKE_BINARY_DIR}
        ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/CheckIncludeFile.cxx
        CMAKE_FLAGS
        -DCMAKE_MFC_FLAG:STRING=2
        -DCOMPILE_DEFINITIONS:STRING=-D_AFXDLL
        OUTPUT_VARIABLE OUTPUT)
      IF(CMake_HAVE_MFC)
        MESSAGE(STATUS "Looking for MFC - found")
        SET(CMake_HAVE_MFC 1 CACHE INTERNAL "Have MFC?")
        FILE(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log
          "Determining if MFC exists passed with the following output:\n"
          "${OUTPUT}\n\n")
      ELSE(CMake_HAVE_MFC)
        MESSAGE(STATUS "Looking for MFC - not found")
        SET(CMake_HAVE_MFC 0 CACHE INTERNAL "Have MFC?")
        FILE(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log
          "Determining if MFC exists failed with the following output:\n"
          "${OUTPUT}\n\n")
      ENDIF(CMake_HAVE_MFC)
    ENDIF("CMake_HAVE_MFC" MATCHES "^CMake_HAVE_MFC$")
  ENDIF(CMAKE_BUILD_ON_VISUAL_STUDIO)
ENDMACRO(TEST_FOR_EXPRESS)

TEST_FOR_EXPRESS()

IF(CMake_HAVE_MFC)
# Look for the header file.
SET( DIRECTSHOW_EXTRA_DIR )
IF(MSVC70 OR MSVC71)
  SET( DIRECTSHOW_EXTRA_DIR $ENV{VS71COMNTOOLS}../../Vc7/PlatformSDK/Include )
ELSEIF(MSVC80)
  SET( DIRECTSHOW_EXTRA_DIR $ENV{VS80COMNTOOLS}../../VC/PlatformSDK/Include )
ELSEIF(MSCV90)
  SET( DIRECTSHOW_EXTRA_DIR $ENV{VS90COMNTOOLS}../../VC/PlatformSDK/Include )
ENDIF(MSVC70 OR MSVC71)
FIND_PATH( DIRECTSHOW_INCLUDE_DIR_STREAMS_H NAMES streams.h
           PATHS $ENV{H3D_EXTERNAL_ROOT}/include  
                 $ENV{H3D_EXTERNAL_ROOT}/include/DirectShow/BaseClasses
                 ../../External/include    
                 ../../External/include/DirectShow/BaseClasses )
MARK_AS_ADVANCED(DIRECTSHOW_INCLUDE_DIR_STREAMS_H)

FIND_PATH( DIRECTSHOW_INCLUDE_DIR_DDRAW_H NAMES ddraw.h
           PATHS $ENV{DXSDK_DIR}/include
                 ${DIRECTSHOW_EXTRA_DIR} )
MARK_AS_ADVANCED(DIRECTSHOW_INCLUDE_DIR_DDRAW_H)

FIND_LIBRARY( DIRECTSHOW_LIBRARY NAMES strmbase
              PATHS $ENV{H3D_EXTERNAL_ROOT}/lib
                    ../../External/lib )
MARK_AS_ADVANCED(DIRECTSHOW_LIBRARY)

# Copy the results to the output variables.
IF(DIRECTSHOW_INCLUDE_DIR_STREAMS_H AND DIRECTSHOW_INCLUDE_DIR_DDRAW_H AND DIRECTSHOW_LIBRARY)
  SET(DIRECTSHOW_FOUND 1)
  SET(DIRECTSHOW_LIBRARIES ${DIRECTSHOW_LIBRARY})
  SET(DIRECTSHOW_INCLUDE_DIR ${DIRECTSHOW_INCLUDE_DIR_STREAMS_H} ${DIRECTSHOW_INCLUDE_DIR_DDRAW_H})
ELSE(DIRECTSHOW_INCLUDE_DIR_STREAMS_H AND DIRECTSHOW_INCLUDE_DIR_DDRAW_H AND DIRECTSHOW_LIBRARY)
  SET(DIRECTSHOW_FOUND 0)
  SET(DIRECTSHOW_LIBRARIES)
  SET(DIRECTSHOW_INCLUDE_DIR)
ENDIF(DIRECTSHOW_INCLUDE_DIR_STREAMS_H AND DIRECTSHOW_INCLUDE_DIR_DDRAW_H AND DIRECTSHOW_LIBRARY)

ENDIF(CMake_HAVE_MFC)

# Report the results.
IF(NOT DIRECTSHOW_FOUND)
  SET(DIRECTSHOW_DIR_MESSAGE
    "Directshow was not found. It only works for Visual Studio 7 at the moment.")
  IF(NOT DIRECTSHOW_FIND_QUIETLY)
    MESSAGE(STATUS "${DIRECTSHOW_DIR_MESSAGE}")
  ELSE(NOT DIRECTSHOW_FIND_QUIETLY)
    IF(DIRECTSHOW_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "${DIRECTSHOW_DIR_MESSAGE}")
    ENDIF(DIRECTSHOW_FIND_REQUIRED)
  ENDIF(NOT DIRECTSHOW_FIND_QUIETLY)
ENDIF(NOT DIRECTSHOW_FOUND)
